# global values
global:
  env: 
    "ASPNETCORE_ENVIRONMENT": "Staging"
    "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true"

identity-api:

  replicaCount: 1
  env: 
    "ASPNETCORE_ENVIRONMENT": "Development"
    "AWS_ACCESS_KEY_ID": "test"
    "AWS_REGION": "us-east-1"
    "AWS_SECRET_ACCESS_KEY": "test"

  image:
    repository: localhost:32000/identity-api
    pullPolicy: IfNotPresent
    tag: "0.5"

  service:
    type: LoadBalancer
    port: 80

  ingress:
    enabled: false
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/"
    hosts:
      - host: "api-fischer.local"
        paths: 
        - "/api"

  autoscaling:
    enabled: false

  serviceAccount:
    create: false

identity-portal:

  replicaCount: 1

  env: 
    "ASPNETCORE_ENVIRONMENT": "Development"
    "AWS_ACCESS_KEY_ID": "test"
    "AWS_REGION": "us-east-1"
    "AWS_SECRET_ACCESS_KEY": "test"

  image:
    repository: localhost:32000/identity-portal
    pullPolicy: IfNotPresent
    tag: "0.3"

  service:
    type: LoadBalancer
    port: 80

  ingress:
    enabled: false
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/"
    hosts:
      - host: "portal-fischer.local"
        paths: 
        - "/portal"

  autoscaling:
    enabled: false

  serviceAccount:
    create: false

notification-service:
  replicaCount: 1
  env: 
    "AWS_ACCESS_KEY_ID": "test"
    "AWS_REGION": "us-east-1"
    "AWS_SECRET_ACCESS_KEY": "test"
    "SecretProvider": "aws-local"
    "SecretProviderUrl": "http://192.168.1.38:4566"

  image:
    repository: localhost:32000/notification-service
    pullPolicy: IfNotPresent
    tag: "0.2"

  service:
    type: LoadBalancer
    port: 80

  ingress:
    enabled: false
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/"
    hosts:
      - host: "notification-fischer.local"
        paths: 
        - "/notification"

  autoscaling:
    enabled: false

  serviceAccount:
    create: false